#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.3.1
# In conjunction with Tcl version 8.6
#    Nov 05, 2014 10:40:47 PM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import Configuration_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    root.title('Camera_Configuration')
    root.geometry('284x242+440+192')
    #root.geometry('284x242+440+192')
    Configuration_support.set_Tk_var()
    w = Camera_Configuration (root)
    Configuration_support.init(root, w)
    root.mainloop()

w = None
rootTop = None

def create_Camera_Configuration (root, W, param=None):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt, rootTop
    rt = root
    w = Toplevel (root)
    rootTop = W
    w.title('Camera Configuration')
    #w.geometry('284x242+440+192')
    w.geometry('304x342+440+192')
    w.resizable(width=FALSE, height=FALSE)
    Configuration_support.set_Tk_var()
    w_win = Camera_Configuration (w)
    w_win.Checkbutton1.deselect()
    Configuration_support.init(w, w_win, param)
    w.protocol("WM_DELETE_WINDOW", destroy_Camera_Configuration)
    return w_win

def destroy_Camera_Configuration ():
    global w, rootTop
    w.destroy()
    rootTop.ConfigureButtn.configure(state=NORMAL,cursor='arrow')
    w = None

class Camera_Configuration:
    def __init__(self, master=None):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font12 = "-family Arial -size 11 -weight bold -slant roman  " + \
            "-underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])
        master.configure(background="#d9d9d9")

        #Current Values Button
        self.Button1 = Button (master)
        self.Button1.place(relx=0.65,rely=0.055,height=28,width=102)
        self.Button1.configure(activebackground="#d9d9d9")
        self.Button1.configure(activeforeground="#000000")
        self.Button1.configure(background=_bgcolor)
        self.Button1.configure(disabledforeground="#a3a3a3")
        self.Button1.configure(foreground="#000000")
        self.Button1.configure(highlightbackground="#d9d9d9")
        self.Button1.configure(highlightcolor="black")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''Current''')
        self.Button1.configure(width=102)
        self.Button1.configure(command=Configuration_support.read)

        #Update Button
        self.Button2 = Button (master)
        self.Button2.place(relx=0.32,rely=0.83,height=28,width=124)
        self.Button2.configure(activebackground="#d9d9d9")
        self.Button2.configure(activeforeground="#000000")
        self.Button2.configure(background=_bgcolor)
        self.Button2.configure(disabledforeground="#a3a3a3")
        self.Button2.configure(foreground="#000000")
        self.Button2.configure(highlightbackground="#d9d9d9")
        self.Button2.configure(highlightcolor="black")
        self.Button2.configure(pady="0")
        self.Button2.configure(text='''Update Parameters''')
        self.Button2.configure(width=124)
        self.Button2.configure(command=Configuration_support.update)

        #Check All Button
        self.Checkbutton1 = Checkbutton (master)
        self.Checkbutton1.place(relx=0.45,rely=0.04,relheight=0.12
                ,relwidth=0.18)
        self.Checkbutton1.configure(activebackground="#d9d9d9")
        self.Checkbutton1.configure(activeforeground="#000000")
        self.Checkbutton1.configure(background=_bgcolor)
        self.Checkbutton1.configure(disabledforeground="#a3a3a3")
        self.Checkbutton1.configure(foreground="#000000")
        self.Checkbutton1.configure(highlightbackground="#d9d9d9")
        self.Checkbutton1.configure(highlightcolor="black")
        self.Checkbutton1.configure(overrelief="groove")
        self.Checkbutton1.configure(relief=GROOVE)
        self.Checkbutton1.configure(text='''All''')
        self.Checkbutton1.configure(command=Configuration_support.allCams)
        self.Checkbutton1.configure(variable=Configuration_support.check)
        self.Checkbutton1.configure(width=52)

        self.Frame1 = Frame (master)
        self.Frame1.place(relx=0.04,rely=0.04,relheight=0.12,relwidth=0.43)
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief=GROOVE)
        self.Frame1.configure(background=_bgcolor)
        self.Frame1.configure(width=95)

        self.Label1 = Label (self.Frame1)
        self.Label1.place(relx=0.04,rely=0.1,height=21,width=47)
        self.Label1.configure(background=_bgcolor)
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''Camera:''')

        #Camera No. Spin Box
        self.Spinbox1 = Spinbox (self.Frame1,from_=1.0,to=60.0)
        self.Spinbox1.place(relx=0.48,rely=0.17,relheight=0.63,relwidth=0.35)
        self.Spinbox1.configure(activebackground="#f9f9f9")
        self.Spinbox1.configure(background="white")
        self.Spinbox1.configure(buttonbackground="#d9d9d9")
        self.Spinbox1.configure(disabledforeground="#a3a3a3")
        self.Spinbox1.configure(foreground="black")
        self.Spinbox1.configure(from_="1.0")
        self.Spinbox1.configure(highlightbackground="black")
        self.Spinbox1.configure(highlightcolor="black")
        self.Spinbox1.configure(insertbackground="black")
        self.Spinbox1.configure(selectbackground="#c4c4c4")
        self.Spinbox1.configure(selectforeground="black")
        self.Spinbox1.configure(textvariable=Configuration_support.spinbox)
        self.Spinbox1.configure(to="60.0")
        self.value_list = ['1','2','3','4','5','6','7','8','9','10','11','12','13','14','15','16','17','18','19','20','21','22','23','24','25','26','27','28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45','46','47','48','49','50','51','52','53','54','55','56','57','58','59','60',]
        self.Spinbox1.configure(values=self.value_list)
        self.Spinbox1.configure(width=3)

        self.Frame2 = Frame (master)
        self.Frame2.place(relx=0.04,rely=0.21,relheight=0.57,relwidth=0.93)
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief=GROOVE)
        self.Frame2.configure(background=_bgcolor)
        self.Frame2.configure(highlightbackground="#d9d9d9")
        self.Frame2.configure(highlightcolor="black")
        self.Frame2.configure(width=265)

        self.Label2 = Label (self.Frame2)
        self.Label2.place(relx=0.04,rely=0.00,height=24,width=32)
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(activeforeground="black")
        self.Label2.configure(background=_bgcolor)
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(font=font12)
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(highlightbackground="#d9d9d9")
        self.Label2.configure(highlightcolor="black")
        self.Label2.configure(text='''ISO''')

        #ISO Values
        self.TCombobox1 = ttk.Combobox (self.Frame2)
        self.TCombobox1.place(relx=0.47,rely=0.00,relheight=0.13,relwidth=0.48)
        self.value_list = ['100','200','400','800','1600','3200','6400']
        self.TCombobox1.configure(values=self.value_list)
        self.TCombobox1.configure(textvariable=Configuration_support.ISO)
        self.TCombobox1.configure(takefocus="")

        self.Label7 = Label (self.Frame2)
        self.Label7.place(relx=0.04,rely=0.21,height=24,width=76)
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(activeforeground="black")
        self.Label7.configure(background=_bgcolor)
        self.Label7.configure(disabledforeground="#a3a3a3")
        self.Label7.configure(font=font12)
        self.Label7.configure(foreground="#000000")
        self.Label7.configure(highlightbackground="#d9d9d9")
        self.Label7.configure(highlightcolor="black")
        self.Label7.configure(text='''Aperature''')

        #Aperature Values
        self.TCombobox2 = ttk.Combobox (self.Frame2)
        self.TCombobox2.place(relx=0.47,rely=0.21,relheight=0.13,relwidth=0.48)
        self.value_list = ['3.5','4','4.5','5','6.3','7.1','8','9','10','11','13','14','16','18','20','22']
        self.TCombobox2.configure(values=self.value_list)
        self.TCombobox2.configure(textvariable=Configuration_support.Aperature)
        self.TCombobox2.configure(takefocus="")

        self.Label4 = Label (self.Frame2)
        self.Label4.place(relx=0.04,rely=0.43,height=24,width=109)
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(activeforeground="black")
        self.Label4.configure(background=_bgcolor)
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(font=font12)
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(highlightbackground="#d9d9d9")
        self.Label4.configure(highlightcolor="black")
        self.Label4.configure(text='''Shutter Speed''')

        #Shutter Speed Values
        self.TCombobox3 = ttk.Combobox (self.Frame2)
        self.TCombobox3.place(relx=0.47,rely=0.43,relheight=0.13,relwidth=0.48)
        self.value_list = ['30','25','20','15','13','10','8','6','5','4','3.2','2.5','2','1.6','1.3','1','0.8','0.6','0.5','0.4','0.3','1/4','1/5','1/6','1/8','1/10','1/13','1/15','1/20','1/25','1/30','1/40','1/50','1/60','1/80','1/100','1/125','1/160','1/200','1/250','1/320','1/400','1/500','1/640','1/800','1/1000','1/1250','1/2000','1/2500','1/3200','1/4000']
        self.TCombobox3.configure(values=self.value_list)
        self.TCombobox3.configure(textvariable=Configuration_support.Speed)
        self.TCombobox3.configure(takefocus="")

        self.Label5 = Label (self.Frame2)
        self.Label5.place(relx=0.04,rely=0.64,height=24,width=103)
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(activeforeground="black")
        self.Label5.configure(background=_bgcolor)
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(font=font12)
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(highlightbackground="#d9d9d9")
        self.Label5.configure(highlightcolor="black")
        self.Label5.configure(text='''Image Format''')

        #Image Format Values
        self.TCombobox5 = ttk.Combobox (self.Frame2)
        self.TCombobox5.place(relx=0.47,rely=0.64,relheight=0.13,relwidth=0.48)
        self.value_list = ['Large Fine JPEG','Large Normal JPEG','Medium Fine JPEG','Medium Normal JPEG','Small Fine JPEG','Small Normal JPEG', 'Smaller JPEG', 'Tiny JPEG', 'RAW + Large  Fine JPEG', 'RAW']
        self.TCombobox5.configure(values=self.value_list)
        self.TCombobox5.configure(textvariable=Configuration_support.ImageFor) # must change it into something else
        self.TCombobox5.configure(takefocus="")


        self.Label6 = Label (self.Frame2)
        self.Label6.place(relx=0.04,rely=0.85,height=24,width=103)
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(activeforeground="black")
        self.Label6.configure(background=_bgcolor)
        self.Label6.configure(disabledforeground="#a3a3a3")
        self.Label6.configure(font=font12)
        self.Label6.configure(foreground="#000000")
        self.Label6.configure(highlightbackground="#d9d9d9")
        self.Label6.configure(highlightcolor="black")
        self.Label6.configure(text='''White Balance''')

        #White Balance Values
        self.TCombobox4 = ttk.Combobox (self.Frame2)
        self.TCombobox4.place(relx=0.47,rely=0.85,relheight=0.13,relwidth=0.48)
        self.value_list = ['Daylight','Shadow','Cloudy','Tungsten','Fluorescent', 'Flash', 'Manual']
        self.TCombobox4.configure(values=self.value_list)
        self.TCombobox4.configure(textvariable=Configuration_support.WhiteBalan)#Must add the Function
        self.TCombobox4.configure(takefocus="")


if __name__ == '__main__':
    vp_start_gui()



